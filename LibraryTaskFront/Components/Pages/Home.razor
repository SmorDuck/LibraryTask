@page "/"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

@using Domain;
@using LibraryTaskFront.Services;
@inject LibraryServices LibraryServices

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="mb-0">Books</h3>
        <button class="btn btn-primary" @onclick="AddBook">
            <i class="bi bi-plus-lg"></i> Add New Book
        </button>
    </div>

    @if (books is null)
    {
        <div class="text-center">
            <p><em>Loading...</em></p>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover shadow-sm">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Author</th>
                        <th scope="col">Published Date</th>
                        <th scope="col">Is Available</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in books)
                    {
                        <tr>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td>@book.PublishedDate.ToShortDateString()</td>
                            <td>@(book.IsAvailable ? "Yes" : "No")</td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => EditBook(book.Id)">
                                        <i class="bi bi-pencil"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteBook(book.Id)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Book> books;

    protected override async Task OnInitializedAsync()
    {
        books = await LibraryServices.GetBooksAsync();
    }

    private void AddBook()
    {
        NavigationManager.NavigateTo("/add-book");
    }

    private void EditBook(int id)
    {
        NavigationManager.NavigateTo($"/edit-book/{id}");
    }

    private async Task DeleteBook(int id)
    {
        await LibraryServices.DeleteBookAsync(id);
        books = await LibraryServices.GetBooksAsync();
    }
}
